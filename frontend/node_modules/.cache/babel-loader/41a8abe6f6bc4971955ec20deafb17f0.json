{"ast":null,"code":"var _jsxFileName = \"/Users/lesleycheung/Desktop/phonebook/Phonebook/frontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport personService from \"./components/services/persons\";\nimport Filter from \"./components/Filter\";\nimport Persons from \"./components/Rows\";\n\nconst Notification = ({\n  notification\n}) => {\n  if (notification.message === null) {\n    return null;\n  }\n\n  const style = {\n    color: notification.type === \"error\" ? \"red\" : \"green\",\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  };\n  return React.createElement(\"div\", {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, notification.message);\n};\n\nconst PersonForm = props => {\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Name: \", React.createElement(\"input\", {\n    onChange: props.handleNameChange,\n    value: props.newName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Number:\", \" \", React.createElement(\"input\", {\n    onChange: props.handleNumberChange,\n    value: props.newNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Add Contact\"));\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState({\n    message: null\n  });\n  useEffect(() => {\n    personService.getAll().then(data => {\n      setPersons(data);\n    });\n  }, []);\n\n  const handleNameChange = event => setNewName(event.target.value);\n\n  const handleNumberChange = event => setNewNumber(event.target.value);\n\n  const handleFilterChange = event => setFilter(event.target.value);\n\n  const notify = (message, type = \"success\") => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => setNotification({\n      message: null\n    }), 10000);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const existingPerson = persons.find(p => p.name === newName);\n\n    if (existingPerson) {\n      const ok = window.confirm(`Replace ${newName}?`);\n\n      if (ok) {\n        personService.replace({ ...existingPerson,\n          number: newNumber\n        }).then(replacedPerson => {\n          setPersons(persons.map(p => p.name === newName ? replacedPerson : p));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          notify(`Replaced ${newName}!`);\n        });\n        /*\n          .catch(() => {\n            setPersons(persons.filter(p => p.name !== newName))\n            notify(`HenkilÃ¶n ${newName} oli jo poistettu`, 'error')\n          })\n          */\n      }\n\n      return;\n    }\n\n    personService.create({\n      name: newName,\n      number: newNumber\n    }).then(createdPerson => {\n      setPersons(persons.concat(createdPerson));\n      setNewName(\"\");\n      setNewNumber(\"\");\n      notify(`Deleted ${createdPerson.name}`);\n    });\n  };\n\n  const deletePerson = id => {\n    const person = persons.find(p => p.id === id);\n    const ok = window.confirm(`Deleted ${person.name}!`);\n\n    if (ok) {\n      personService.remove(id).then(() => {\n        setPersons(persons.filter(p => p.id !== id));\n      });\n      notify(`Deleted ${person.name}`);\n    }\n  };\n\n  const personsToShow = filter.length === 0 ? persons : persons.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()));\n  return React.createElement(\"div\", {\n    className: \"container font4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Phonebook\"), React.createElement(Notification, {\n    notification: notification,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(Filter, {\n    handleChange: handleFilterChange,\n    value: filter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Add a Contact\"), React.createElement(PersonForm, {\n    handleNameChange: handleNameChange,\n    handleNumberChange: handleNumberChange,\n    handleSubmit: handleSubmit,\n    newName: newName,\n    newNumber: newNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Numbers\"), React.createElement(Persons, {\n    persons: personsToShow,\n    deletePerson: deletePerson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/phonebook/Phonebook/frontend/src/App.js"],"names":["React","useState","useEffect","personService","Filter","Persons","Notification","notification","message","style","color","type","background","fontSize","borderStyle","borderRadius","padding","marginBottom","PersonForm","props","handleSubmit","handleNameChange","newName","handleNumberChange","newNumber","App","persons","setPersons","setNewName","setNewNumber","filter","setFilter","setNotification","getAll","then","data","event","target","value","handleFilterChange","notify","setTimeout","preventDefault","existingPerson","find","p","name","ok","window","confirm","replace","number","replacedPerson","map","create","createdPerson","concat","deletePerson","id","person","remove","personsToShow","length","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport personService from \"./components/services/persons\";\nimport Filter from \"./components/Filter\";\nimport Persons from \"./components/Rows\";\n\nconst Notification = ({ notification }) => {\n  if (notification.message === null) {\n    return null;\n  }\n\n  const style = {\n    color: notification.type === \"error\" ? \"red\" : \"green\",\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  };\n\n  return <div style={style}>{notification.message}</div>;\n};\n\nconst PersonForm = props => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        Name: <input onChange={props.handleNameChange} value={props.newName} />\n      </div>\n      <div>\n        Number:{\" \"}\n        <input onChange={props.handleNumberChange} value={props.newNumber} />\n      </div>\n\n      <button className=\"btn\" type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState({\n    message: null\n  });\n\n  useEffect(() => {\n    personService.getAll().then(data => {\n      setPersons(data);\n    });\n  }, []);\n\n  const handleNameChange = event => setNewName(event.target.value);\n  const handleNumberChange = event => setNewNumber(event.target.value);\n  const handleFilterChange = event => setFilter(event.target.value);\n\n  const notify = (message, type = \"success\") => {\n    setNotification({ message, type });\n    setTimeout(() => setNotification({ message: null }), 10000);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const existingPerson = persons.find(p => p.name === newName);\n\n    if (existingPerson) {\n      const ok = window.confirm(`Replace ${newName}?`);\n\n      if (ok) {\n        personService\n          .replace({\n            ...existingPerson,\n            number: newNumber\n          })\n          .then(replacedPerson => {\n            setPersons(\n              persons.map(p => (p.name === newName ? replacedPerson : p))\n            );\n            setNewName(\"\");\n            setNewNumber(\"\");\n            notify(`Replaced ${newName}!`);\n          });\n        /*\n          .catch(() => {\n            setPersons(persons.filter(p => p.name !== newName))\n            notify(`HenkilÃ¶n ${newName} oli jo poistettu`, 'error')\n          })\n          */\n      }\n\n      return;\n    }\n\n    personService\n      .create({\n        name: newName,\n        number: newNumber\n      })\n      .then(createdPerson => {\n        setPersons(persons.concat(createdPerson));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        notify(`Deleted ${createdPerson.name}`);\n      });\n  };\n\n  const deletePerson = id => {\n    const person = persons.find(p => p.id === id);\n    const ok = window.confirm(`Deleted ${person.name}!`);\n    if (ok) {\n      personService.remove(id).then(() => {\n        setPersons(persons.filter(p => p.id !== id));\n      });\n      notify(`Deleted ${person.name}`);\n    }\n  };\n\n  const personsToShow =\n    filter.length === 0\n      ? persons\n      : persons.filter(p =>\n          p.name.toLowerCase().includes(filter.toLowerCase())\n        );\n\n  return (\n    <div className=\"container font4\">\n      <h2>Phonebook</h2>\n\n      <Notification notification={notification} />\n\n      <Filter handleChange={handleFilterChange} value={filter} />\n      <br />\n      <h3>Add a Contact</h3>\n\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleSubmit={handleSubmit}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <br />\n      <h3>Numbers</h3>\n\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}